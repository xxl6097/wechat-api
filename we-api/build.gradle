apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'docker'

group 'com.we'
version '0.0.1'
jar {
    baseName = 'we-api'
}
sourceSets{
    mainClassName = 'com.we.api.Application'
}

//docker {
//    //name "${project.group}/${jar.baseName}"
//    //简单介绍下上面docker{}里面的参数：
//    // name是镜像名，可自己设置名
//    //  buildArgs是设置构建时的环境变量，使用${jar.archiveName}获取构建完的jar包，将其赋值给JAR_FILE变量，在Dockerfile那边便可引用
//    name "registry.cn-qingdao.aliyuncs.com/laws123/laws:${jar.version}"
//    // name 'registry.cn-qingdao.aliyuncs.com/laws123/laws'
//    files jar.archivePath
//    buildArgs(['JAR_FILE': "${jar.archiveName}"])
//}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'


    compile 'org.springframework.boot:spring-boot-starter-parent:2.2.0.RELEASE'
    compile 'org.apache.httpcomponents:httpclient:4.5.12'
    compile 'commons-io:commons-io:2.4'
    compile 'org.springframework.boot:spring-boot-starter-web:2.2.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-websocket:2.2.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf:2.0.1.RELEASE'
    compile 'com.google.code.gson:gson:2.8.7'

    compile 'org.java-websocket:Java-WebSocket:1.3.0'
}


//task buildDocker(type: Docker, dependsOn: build) {
//    applicationName = jar.baseName
//    dockerfile = file('src/main/docker/Dockerfile')
//    doFirst {
//        copy {
//            from jar
//            into "${stageDir}/target"
//        }
//    }
//}

test {
    useJUnitPlatform()
}